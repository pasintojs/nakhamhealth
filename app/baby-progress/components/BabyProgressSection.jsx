"use client";
import { useState, useEffect } from "react";
import {
  thaiMonths,
  developmentalStages,
  calculateAge,
  formatThaiDate,
  getCurrentDevelopmentStage,
  analyzeDevelopmentStatus,
  getCategoryName,
  getCategoryColor,
} from "../../../lib/dspm-utils";

export default function BabyProgressSection({ dspmData }) {
  const [birthDay, setBirthDay] = useState("");
  const [birthMonth, setBirthMonth] = useState("");
  const [birthYear, setBirthYear] = useState("");
  const [babyAge, setBabyAge] = useState(null);
  const [developmentStatus, setDevelopmentStatus] = useState(null);

  useEffect(() => {
    if (birthDay && birthMonth && birthYear) {
      const age = calculateAge(birthDay, birthMonth, birthYear);
      setBabyAge(age);

      if (age && age.totalDays >= 0) {
        const status = analyzeDevelopmentStatus(age.totalMonths, dspmData);
        setDevelopmentStatus(status);
      } else {
        setDevelopmentStatus(null);
      }
    } else {
      setBabyAge(null);
      setDevelopmentStatus(null);
    }
  }, [birthDay, birthMonth, birthYear, dspmData]);

  return (
    <div className="max-w-6xl mx-auto px-4 py-12 relative">
      {/* Background decorative elements */}
      <div className="absolute inset-0 bg-[radial-gradient(circle_at_20%_80%,rgba(59,130,246,0.05),transparent_50%)]" />
      <div className="absolute inset-0 bg-[radial-gradient(circle_at_80%_20%,rgba(16,185,129,0.05),transparent_50%)]" />

      <div className="relative">
        {/* Header Section */}
        <div className="text-center mb-16">
          <h1 className="animate-pulse text-4xl pt-1 sm:text-5xl font-bold bg-gradient-to-r from-sky-600 via-cyan-600 to-emerald-600 bg-clip-text text-transparent mb-4">
            ‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡πá‡∏Å
          </h1>
          <p className="text-slate-600 text-lg max-w-3xl mx-auto">
            ‡∏£‡∏∞‡∏ö‡∏ö‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡πá‡∏Å‡∏ï‡∏≤‡∏°‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô DSPM (Denver Screening for
            Preschool Milestones)
            ‡∏ä‡πà‡∏ß‡∏¢‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡πÄ‡∏à‡∏£‡∏¥‡∏ç‡πÄ‡∏ï‡∏¥‡∏ö‡πÇ‡∏ï‡∏Ç‡∏≠‡∏á‡∏•‡∏π‡∏Å‡∏ô‡πâ‡∏≠‡∏¢‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏∞‡∏ö‡∏ö
          </p>
        </div>

        {/* Birth Date Input Section */}
        <div className="bg-white rounded-xl shadow-lg p-8 mb-8">
          <h2 className="text-2xl font-semibold text-gray-900 mb-6">
            ‡∏Å‡∏£‡∏≠‡∏Å‡∏ß‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡∏≠‡∏á‡∏•‡∏π‡∏Å‡∏ô‡πâ‡∏≠‡∏¢
          </h2>
          <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                ‡∏ß‡∏±‡∏ô
              </label>
              <select
                value={birthDay}
                onChange={(e) => setBirthDay(e.target.value)}
                className="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
              >
                <option value="">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏±‡∏ô</option>
                {Array.from({ length: 31 }, (_, i) => i + 1).map((day) => (
                  <option key={day} value={day}>
                    {day}
                  </option>
                ))}
              </select>
            </div>
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô
              </label>
              <select
                value={birthMonth}
                onChange={(e) => setBirthMonth(e.target.value)}
                className="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
              >
                <option value="">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏î‡∏∑‡∏≠‡∏ô</option>
                {thaiMonths.map((month, index) => (
                  <option key={index + 1} value={index + 1}>
                    {month}
                  </option>
                ))}
              </select>
            </div>
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                ‡∏õ‡∏µ (‡∏û.‡∏®.)
              </label>
              <select
                value={birthYear}
                onChange={(e) => setBirthYear(e.target.value)}
                className="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
              >
                <option value="">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏µ</option>
                {Array.from(
                  { length: 10 },
                  (_, i) => new Date().getFullYear() + 543 - i
                ).map((year) => (
                  <option key={year} value={year - 543}>
                    {year}
                  </option>
                ))}
              </select>
            </div>
          </div>
        </div>

        {/* Age Display */}
        {babyAge && (
          <div className="bg-gradient-to-r from-blue-50 to-purple-50 rounded-xl shadow-lg p-8 mb-8">
            <div className="text-center">
              <h3 className="text-2xl font-semibold text-gray-900 mb-4">
                ‡∏≠‡∏≤‡∏¢‡∏∏‡∏Ç‡∏≠‡∏á‡∏•‡∏π‡∏Å‡∏ô‡πâ‡∏≠‡∏¢
              </h3>
              <div className="text-4xl font-bold text-blue-600 mb-2">
                {babyAge.ageText}
              </div>
              <div className="text-gray-600">
                (‡∏£‡∏ß‡∏° {babyAge.totalDays.toLocaleString()} ‡∏ß‡∏±‡∏ô)
              </div>
            </div>
          </div>
        )}

        {/* Development Status */}
        {developmentStatus && (
          <div className="space-y-8">
            {/* Current Stage */}
            <div className="bg-white rounded-xl shadow-lg p-8">
              <div className="text-center mb-8">
                <h3 className="text-2xl font-semibold text-gray-900 mb-4">
                  ‡∏ä‡πà‡∏ß‡∏á‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏Å‡∏≤‡∏£‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
                </h3>
                <div className="inline-block bg-gradient-to-r from-green-500 to-blue-500 text-white px-6 py-3 rounded-full text-xl font-semibold">
                  {developmentStatus.currentStage.title}
                </div>
              </div>

              {/* Milestones */}
              <div className="grid gap-6">
                <h4 className="text-xl font-semibold text-gray-900 mb-4">
                  ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏Å‡∏≤‡∏£ (
                  {developmentStatus.currentMilestones.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£)
                </h4>

                {developmentStatus.currentMilestones.map((milestone) => (
                  <div
                    key={milestone.id}
                    className="bg-gray-50 rounded-lg p-6 border-l-4 border-blue-500"
                  >
                    <div className="flex items-start justify-between mb-4">
                      <div className="flex-1">
                        <div className="flex items-center gap-3 mb-2">
                          <span className="text-sm font-medium text-gray-600">
                            {milestone.itemNo}
                          </span>
                          <span
                            className={`px-2 py-1 rounded-full text-xs font-medium ${getCategoryColor(
                              milestone.category
                            )}`}
                          >
                            {getCategoryName(milestone.category)}
                          </span>
                        </div>
                        <h5 className="text-lg font-semibold text-gray-900 mb-2">
                          {milestone.title}
                        </h5>
                        <p className="text-gray-700 mb-4">
                          {milestone.description}
                        </p>
                      </div>
                    </div>

                    {/* How to Test */}
                    {milestone.howToTest && (
                      <div className="mb-4">
                        <h6 className="text-sm font-semibold text-gray-800 mb-2">
                          üîç ‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô:
                        </h6>
                        <p className="text-sm text-gray-700 bg-blue-50 p-3 rounded">
                          {milestone.howToTest}
                        </p>
                      </div>
                    )}

                    {/* Pass Condition */}
                    {milestone.passCondition && (
                      <div className="mb-4">
                        <h6 className="text-sm font-semibold text-gray-800 mb-2">
                          ‚úÖ ‡πÄ‡∏Å‡∏ì‡∏ë‡πå‡∏ú‡πà‡∏≤‡∏ô:
                        </h6>
                        <p className="text-sm text-gray-700 bg-green-50 p-3 rounded">
                          {milestone.passCondition}
                        </p>
                      </div>
                    )}

                    {/* Training Methods */}
                    {milestone.trainingMethods.length > 0 && (
                      <div className="mb-4">
                        <h6 className="text-sm font-semibold text-gray-800 mb-2">
                          üéØ ‡∏ß‡∏¥‡∏ò‡∏µ‡∏ù‡∏∂‡∏Å‡∏ó‡∏±‡∏Å‡∏©‡∏∞:
                        </h6>
                        <div className="bg-yellow-50 p-3 rounded">
                          {milestone.trainingMethods.map((method, index) => (
                            <div
                              key={index}
                              className="text-sm text-gray-700 mb-2 last:mb-0"
                            >
                              <span className="font-medium">{index + 1}.</span>{" "}
                              {method}
                            </div>
                          ))}
                        </div>
                      </div>
                    )}

                    {/* Equipment */}
                    {milestone.equipment && milestone.equipment !== "-" && (
                      <div>
                        <h6 className="text-sm font-semibold text-gray-800 mb-2">
                          üß∏ ‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå/‡∏Ç‡∏≠‡∏á‡πÄ‡∏•‡πà‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ:
                        </h6>
                        <p className="text-sm text-gray-700 bg-purple-50 p-3 rounded">
                          {milestone.equipment}
                        </p>
                      </div>
                    )}
                  </div>
                ))}
              </div>
            </div>

            {/* Completed Milestones Summary */}
            {developmentStatus.completedMilestones.length > 0 && (
              <div className="bg-white rounded-xl shadow-lg p-6">
                <div className="flex items-center justify-between mb-4">
                  <h3 className="text-lg font-semibold text-gray-900">
                    ‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏ú‡πà‡∏≤‡∏ô‡∏°‡∏≤‡πÅ‡∏•‡πâ‡∏ß
                  </h3>
                  <div className="bg-gradient-to-r from-green-500 to-emerald-500 text-white px-4 py-2 rounded-full text-sm font-semibold">
                    ‡∏ú‡πà‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß {developmentStatus.completedMilestones.length}{" "}
                    ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
                  </div>
                </div>

                <div className="overflow-x-auto">
                  <div
                    className="flex gap-4 pb-2"
                    style={{ width: "max-content" }}
                  >
                    {developmentStatus.completedMilestones.map((milestone) => (
                      <div
                        key={milestone.id}
                        className="flex-shrink-0 w-64 bg-green-50 rounded-lg p-4 border border-green-200"
                      >
                        <div className="flex items-center gap-2 mb-2">
                          <span className="text-xs font-medium text-gray-600">
                            {milestone.itemNo}
                          </span>
                          <span
                            className={`px-2 py-1 rounded-full text-xs font-medium ${getCategoryColor(
                              milestone.category
                            )}`}
                          >
                            {getCategoryName(milestone.category)}
                          </span>
                        </div>
                        <div className="flex items-start gap-2 mb-2">
                          <span className="text-green-600 font-bold text-sm">
                            ‚úì
                          </span>
                          <h5
                            className="text-sm font-semibold text-gray-900 leading-tight overflow-hidden"
                            style={{
                              display: "-webkit-box",
                              WebkitLineClamp: 2,
                              WebkitBoxOrient: "vertical",
                            }}
                          >
                            {milestone.title}
                          </h5>
                        </div>
                        <p
                          className="text-xs text-gray-600 leading-tight overflow-hidden"
                          style={{
                            display: "-webkit-box",
                            WebkitLineClamp: 2,
                            WebkitBoxOrient: "vertical",
                          }}
                        >
                          {milestone.description}
                        </p>
                      </div>
                    ))}
                  </div>
                </div>

                <div className="text-center mt-3">
                  <span className="text-xs text-gray-500">
                    ‚Üê ‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ‚Üí
                  </span>
                </div>
              </div>
            )}

            {/* All Relevant Milestones Summary */}
            <div className="bg-white rounded-xl shadow-lg p-8">
              <h4 className="text-xl font-semibold text-gray-900 mb-6">
                ‡∏™‡∏£‡∏∏‡∏õ‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏Å‡∏≤‡∏£‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
              </h4>

              <div className="text-center mb-6">
                <div className="inline-block p-6 bg-blue-50 rounded-lg">
                  <div className="text-3xl font-bold text-blue-600">
                    {developmentStatus.totalMilestones}
                  </div>
                  <div className="text-sm text-gray-600">
                    ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ä‡πà‡∏ß‡∏á‡∏≠‡∏≤‡∏¢‡∏∏‡∏ô‡∏µ‡πâ
                  </div>
                </div>
              </div>

              {/* Categories Summary */}
              <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-5 gap-4">
                {["GM", "FM", "RL", "EL", "PS"].map((category) => {
                  const categoryMilestones =
                    developmentStatus.allRelevantMilestones.filter(
                      (m) => m.category === category
                    );
                  return (
                    <div
                      key={category}
                      className="text-center p-4 bg-gray-50 rounded-lg"
                    >
                      <div
                        className={`inline-block px-3 py-1 rounded-full text-xs font-medium mb-2 ${getCategoryColor(
                          category
                        )}`}
                      >
                        {getCategoryName(category)}
                      </div>
                      <div className="text-lg font-semibold text-gray-900">
                        {categoryMilestones.length}
                      </div>
                      <div className="text-sm text-gray-600">‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</div>
                    </div>
                  );
                })}
              </div>
            </div>
          </div>
        )}

        {/* Information Section */}
        <div className="bg-gradient-to-r from-blue-50 to-purple-50 rounded-xl shadow-lg p-8 mt-8">
          <h3 className="text-2xl font-semibold text-gray-900 mb-4">
            ‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏Å‡∏≤‡∏£ DSPM
          </h3>
          <div className="prose prose-lg text-gray-700">
            <p className="mb-4">
              <strong>DSPM (Denver Screening for Preschool Milestones)</strong>
              ‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô‡∏™‡∏≤‡∏Å‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡πá‡∏Å‡πÉ‡∏ô‡∏î‡πâ‡∏≤‡∏ô‡∏ï‡πà‡∏≤‡∏á‡πÜ
              ‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡∏î‡πâ‡∏ß‡∏¢:
            </p>
            <ul className="list-disc pl-6 space-y-2">
              <li>
                <strong>‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏´‡∏ß‡πÉ‡∏´‡∏ç‡πà (GM)</strong> - ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏Å‡∏•‡πâ‡∏≤‡∏°‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡πÉ‡∏´‡∏ç‡πà
                ‡πÄ‡∏ä‡πà‡∏ô ‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡πà‡∏á ‡πÄ‡∏î‡∏¥‡∏ô ‡∏ß‡∏¥‡πà‡∏á
              </li>
              <li>
                <strong>‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏´‡∏ß‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î (FM)</strong> -
                ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏Å‡∏•‡πâ‡∏≤‡∏°‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡πÄ‡∏•‡πá‡∏Å ‡πÄ‡∏ä‡πà‡∏ô ‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏ö‡∏Ç‡∏≠‡∏á ‡∏Å‡∏≤‡∏£‡∏ß‡∏≤‡∏î‡∏£‡∏π‡∏õ
              </li>
              <li>
                <strong>‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡∏£‡∏π‡πâ‡∏†‡∏≤‡∏©‡∏≤ (RL)</strong> - ‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏†‡∏≤‡∏©‡∏≤‡πÅ‡∏•‡∏∞‡∏Ñ‡∏≥‡∏û‡∏π‡∏î
              </li>
              <li>
                <strong>‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏≠‡∏≠‡∏Å‡∏ó‡∏≤‡∏á‡∏†‡∏≤‡∏©‡∏≤ (EL)</strong> - ‡∏Å‡∏≤‡∏£‡∏™‡∏∑‡πà‡∏≠‡∏™‡∏≤‡∏£‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏û‡∏π‡∏î
              </li>
              <li>
                <strong>‡∏Å‡∏≤‡∏£‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏ï‡∏ô‡πÄ‡∏≠‡∏á‡πÅ‡∏•‡∏∞‡∏™‡∏±‡∏á‡∏Ñ‡∏° (PS)</strong> -
                ‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏Å‡∏≤‡∏£‡∏î‡∏π‡πÅ‡∏•‡∏ï‡∏ô‡πÄ‡∏≠‡∏á‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏±‡∏á‡∏Ñ‡∏°
              </li>
            </ul>
            <p className="mt-4 text-sm text-gray-600">
              ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏: ‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏ô‡∏µ‡πâ‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡πÅ‡∏ô‡∏ß‡∏ó‡∏≤‡∏á‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏ï‡πâ‡∏ô
              ‡∏´‡∏≤‡∏Å‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏™‡∏á‡∏™‡∏±‡∏¢‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á‡∏•‡∏π‡∏Å
              ‡∏Ñ‡∏ß‡∏£‡∏õ‡∏£‡∏∂‡∏Å‡∏©‡∏≤‡πÅ‡∏û‡∏ó‡∏¢‡πå‡πÄ‡∏î‡πá‡∏Å‡∏´‡∏£‡∏∑‡∏≠‡∏ú‡∏π‡πâ‡πÄ‡∏ä‡∏µ‡πà‡∏¢‡∏ß‡∏ä‡∏≤‡∏ç‡∏î‡πâ‡∏≤‡∏ô‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡πá‡∏Å
            </p>
          </div>
        </div>
      </div>
    </div>
  );
}
